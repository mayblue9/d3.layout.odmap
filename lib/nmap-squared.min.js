var nmap_squared=function(e){function t(){var e,a=-Number.MAX_VALUE,o=Number.MAX_VALUE,u=-Number.MAX_VALUE,c=Number.MAX_VALUE,f,p;for(e=0;e<r.data.length;e++)f=parseFloat(r.data[e].x),p=parseFloat(r.data[e].y),f>a&&(a=f),o>f&&(o=f),p>u&&(u=p),c>p&&(c=p);for(h=a-o,i=u-c,n=r.width/h,d=r.height/i,d>n?d=n:n=d,e=0;e<r.data.length;e++){var l={};for(var g in r.data[e])l[g]=r.data[e][g];l["class"]=1,l.x=(parseFloat(r.data[e].x)-o)*n+1,l.y=(parseFloat(r.data[e].y)-c)*d+1,s.push(l)}var x=r.square?4*Math.ceil(Math.ceil(Math.sqrt(s.length))/4):Math.ceil(Math.sqrt(s.length)),m=Math.pow(x,2),y=m-s.length,M=1/y;switch(r.method){case"border":var v=[];for(f=0;x-M>=f;f+=M)v.push({"class":0,dist:Number.MAX_VALUE,x:h*n/x*f+M*Math.random(),y:M*Math.random()}),v.push({"class":0,dist:Number.MAX_VALUE,x:h*n/x*f+M*Math.random(),y:i*d+1+M*Math.random()});for(p=0;x-M>=p;p+=M)v.push({"class":0,dist:Number.MAX_VALUE,x:M*Math.random(),y:i*d/x*p+M*Math.random()}),v.push({"class":0,dist:Number.MAX_VALUE,x:h*n+1+M*Math.random(),y:i*d/x*p+M*Math.random()});for(;y>0;)v=t.calcDist(v,s),s.push(v[v.length-1]),y--;break;case"quad":if(typeof d3.geom.quadtree!=typeof Function)throw"ERROR: If you want the quadtree method need to include the d3 library.";var b=[];for(e=0;e<s.length;e++)b.push([s[e].x,s[e].y]);for(var w=[[0,0],[h*n+2,i*d+2]];y>0;){var A=d3.geom.quadtree().extent(w)(b),q=h*n,E=i*d;E>q&&(q=E),E=q;var O=t.checkForEmptySquares(A,0,q,E,0,0);if(O=t.measureSquares(O,h*n,i*d),O.length>0)b.push([O[O.length-1].x,O[O.length-1].y]),s.push(O[O.length-1]),y--;else for(var R=M/y;y>0;)s.push({x:M+R*y,y:M+R}),y--}}}if(typeof nmap!=typeof Function)throw"ERROR: You need to include the nmap.js library.";var a={data:[],height:1,width:1,square:!1,method:"border",border_adv:1},r=nmap_extend(a,e),s=[],h,i,n,d;return t.calcDist=function(e,t){for(var a=0;a<e.length;a++)for(var s=0;s<t.length;s++){var h=Math.sqrt((e[a].x-t[s].x)*(e[a].x-t[s].x)+(e[a].y-t[s].y)*(e[a].y-t[s].y));0===t[s]["class"]&&(h*=r.border_adv),h<e[a].dist&&(e[a].dist=h)}return e.sort(function(e,t){return e.dist<t.dist?-1:e.dist>t.dist?1:0}),e},t.measureSquares=function(e,t,a){for(var r=0;r<e.length;r++)e[r].swidth=e[r].width,e[r].sheight=e[r].height,e[r].x>t||e[r].y>a?e[r].size=0:(e[r].x+e[r].width>t&&(e[r].swidth=t-e[r].x),e[r].y+e[r].height>a&&(e[r].sheight=a-e[r].y),e[r].size=e[r].sheight*e[r].swidth);return e.sort(function(e,t){return e.size<t.size?-1:e.size>t.size?1:0}),e},t.checkForEmptySquares=function(e,a,r,s,h,i){var n=[],d,o,u;if(!e.leaf){var c=0;for(u in e.nodes)c++;if(4>c){var f=[];for(u=0;4>u;u++)u in e.nodes||f.push(u);var p=[];for(f.indexOf(0)>=0&&f.indexOf(1)>=0?(p.push(0),p.push(1),n.push(t.createMissingRect(2,1,a,r,s,h,i))):f.indexOf(2)>=0&&f.indexOf(3)>=0?(p.push(2),p.push(3),n.push(t.createMissingRect(2,1,a,r,s,h,i+s/2))):f.indexOf(0)>=0&&f.indexOf(2)>=0?(p.push(0),p.push(2),n.push(t.createMissingRect(1,2,a,r,s,h,i))):f.indexOf(1)>=0&&f.indexOf(3)>=0&&(p.push(1),p.push(3),n.push(t.createMissingRect(1,2,a,r,s,h+r/2,i))),u=0;4>u;u++)if(p.indexOf(parseInt(u))<0&&f.indexOf(parseInt(u))>=0){switch(d=0,o=0,parseInt(u)){case 0:break;case 1:d=r/2;break;case 2:o=s/2;break;case 3:d=r/2,o=s/2}n.push(t.createMissingRect(1,1,a,r,s,h+d,i+o))}}for(u=0;4>u;u++)if(u in e.nodes){switch(d=0,o=0,parseInt(u)){case 0:break;case 1:d=r/2;break;case 2:o=s/2;break;case 3:d=r/2,o=s/2}n=n.concat(t.checkForEmptySquares(e.nodes[u],a+1,r/2,s/2,h+d,i+o))}}return n},t.createMissingRect=function(e,t,a,r,s,h,i){return{ox:h,oy:i,x:h+r/2*e/2,y:i+s/2*t/2,height:s/2*t,width:r/2*e,level:a,size:0,"class":0}},t(),{width:h*n+2,height:i*d+2,data:s}};